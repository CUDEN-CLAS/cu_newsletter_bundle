<?php
/**
 * @file
 * Code for the CU Newsletter List feature.
 */

include_once 'cu_newsletter_list.features.inc';

/**
 * Implments hook_preprocess_entity().
 *
 * builds newsletter list
 */
function cu_newsletter_list_preprocess_entity(&$vars) {
  if ($vars['elements']['#bundle'] == 'newsletter_list') {

    $query = db_select('node', 'n');
    $show_pager = 0;
    $items = $vars['bean']->field_newsletter_items_display[LANGUAGE_NONE][0]['value'];
    if ($items == '10_pager') {
      $items = 10;
      $show_pager = 1;
    }
    if ($show_pager) {
      $query = $query->extend('PagerDefault')->limit($items);
    }
    else {
      $query->range(0, $items);
    }
    $query->condition('n.type', 'newsletter', '=');
    $query->condition('n.status', 1, '=');
    $query->fields('n', array('nid'));
    // Filter by newsletter type
    if (isset($vars['bean']->field_newsletter_list_type_name[LANGUAGE_NONE])) {
      $newsletter_tid = $vars['bean']->field_newsletter_list_type_name[LANGUAGE_NONE][0]['tid'];
      $query->join('field_data_field_newsletter_type', 'type', 'n.nid = type.entity_id');
      $query->fields('type', array('field_newsletter_type_tid'));
      $query->condition('type.field_newsletter_type_tid', $newsletter_tid, '=');
    }


    $query->distinct();
    $query->groupBy('n.nid');
    // Display the newest first.
    $query->orderBy('created', 'DESC');
    $nids = $query->execute()->fetchCol();
    $nodes = node_load_multiple($nids);
    if (!empty($vars['bean']->title)) {
      $tag = 'h3';
    }
    else {
      $tag = 'h2';
    }
    foreach ($nodes as $key => $node) {
      $nodes[$key]->heading_tag['#tag'] = $tag;
    }
    $output['newsletters'] = node_view_multiple($nodes, 'teaser');
    $output['newsletters']['#weight'] = 99;
    if ($show_pager) {
      $output['pager'] = array(
        '#theme' => 'pager',
          '#tags' => array(),
          '#weight' => 100,
      );
    }

    $vars['content'] = $output;
  }
}

function cu_newsletter_list_items_display() {
  return array(
    '1' => '1',
    '2' => '2',
    '3' => '3',
    '4' => '4',
    '5' => '5',
    '6' => '6',
    '7' => '7',
    '8' => '8',
    '9' => '9',
    '10' => '10',
    '10_pager' => '10 with pager',
  );
}
